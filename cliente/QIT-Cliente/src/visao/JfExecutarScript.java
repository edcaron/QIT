package visao;

import controle.ControleExecutarScript;
import controle.ControleMaquina;
import controle.ITela;
import controle.ControleScript;
import controle.Formatacao;
import controle.ProxyTelas;
import controle.Util;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import modelo.ExecucaoScript;
import modelo.Maquina;
import modelo.MaquinasExecutarScript;
import modelo.Script;
import modelo.Tela;
import modelo.Usuario;

public class JfExecutarScript extends javax.swing.JFrame implements ITela {

    protected Usuario usuario;
    protected Tela tela;
    protected ProxyTelas proxy;
    protected ExecucaoScript execScript;
    protected Script script;
    protected ControleExecutarScript ces;
    protected Set<MaquinasExecutarScript> listaMaquinasExecutarScripts;

    public JfExecutarScript(Usuario usuario) {
        initComponents();
        this.setTitle("Executar Script");
        this.usuario = usuario;
        this.ces = new ControleExecutarScript();
        listaMaquinasExecutarScripts = new HashSet<>();
        this.tela = new Tela();

        tela.setId(11);

        script = new Script();
        execScript = new ExecucaoScript();

        qftfIdScript.setEditable(false);
        qftfIdScript.setDataType("integer");
        qftfIdScript.setNotNull(true);
        qftfIdScript.setMaxLenght(100);

        jftfNomeScript.setEditable(false);
        jftfNomeScript.setFocusable(false);

        proxy = new ProxyTelas(this, this.usuario, this.tela);
//        Verificar permissao da operacao ler
        this.ler();

        controle.Util.definePadroesJFrame(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtpMain = new javax.swing.JTabbedPane();
        jpCadastro = new javax.swing.JPanel();
        btSalvar = new javax.swing.JButton();
        btCancelar1 = new javax.swing.JButton();
        btBuscarScript = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        qftfIdScript = new qitjftf.QITJFormattedTextField();
        jftfNomeScript = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtMaquinasAdicionadas = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtMaquinas = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jftfNomeMaquina = new javax.swing.JFormattedTextField();
        btBuscarMaquina = new javax.swing.JButton();
        btAdicionarMaquina = new javax.swing.JButton();
        btRemoverMaquina = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jpConsulta = new javax.swing.JPanel();
        btCancelar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtResultados = new javax.swing.JTable();
        btVerEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jtpMain.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtpMainFocusGained(evt);
            }
        });

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btCancelar1.setText("Cancelar");
        btCancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelar1ActionPerformed(evt);
            }
        });

        btBuscarScript.setText("Buscar");
        btBuscarScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarScriptActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Script:*");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("*Campos obrigatórios");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Buscar Máquinas:");

        jtMaquinasAdicionadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "So"
            }
        ));
        jtMaquinasAdicionadas.getTableHeader().setReorderingAllowed(false);
        jtMaquinasAdicionadas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtMaquinasAdicionadasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtMaquinasAdicionadas);
        if (jtMaquinasAdicionadas.getColumnModel().getColumnCount() > 0) {
            jtMaquinasAdicionadas.getColumnModel().getColumn(2).setResizable(false);
        }

        jtMaquinas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "SO"
            }
        ));
        jtMaquinas.getTableHeader().setReorderingAllowed(false);
        jtMaquinas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtMaquinasMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jtMaquinas);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Nome:");

        btBuscarMaquina.setText("Buscar");
        btBuscarMaquina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarMaquinaActionPerformed(evt);
            }
        });

        btAdicionarMaquina.setText("Adicionar");
        btAdicionarMaquina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarMaquinaActionPerformed(evt);
            }
        });

        btRemoverMaquina.setText("Remover");
        btRemoverMaquina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverMaquinaActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Máquinas adicionadas*:");

        javax.swing.GroupLayout jpCadastroLayout = new javax.swing.GroupLayout(jpCadastro);
        jpCadastro.setLayout(jpCadastroLayout);
        jpCadastroLayout.setHorizontalGroup(
            jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroLayout.createSequentialGroup()
                .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCadastroLayout.createSequentialGroup()
                        .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpCadastroLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jpCadastroLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(qftfIdScript, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jftfNomeScript, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btBuscarScript))
                                    .addGroup(jpCadastroLayout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jftfNomeMaquina, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btBuscarMaquina))
                            .addGroup(jpCadastroLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jpCadastroLayout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btAdicionarMaquina))
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCadastroLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btRemoverMaquina)))
                        .addGap(0, 48, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCadastroLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(btCancelar1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jpCadastroLayout.setVerticalGroup(
            jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btBuscarScript)
                    .addComponent(jLabel3)
                    .addComponent(qftfIdScript, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftfNomeScript, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jftfNomeMaquina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscarMaquina))
                .addGap(5, 5, 5)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCadastroLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAdicionarMaquina)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCadastroLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCadastroLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btRemoverMaquina))
                    .addGroup(jpCadastroLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel4)))
                .addGap(19, 19, 19)
                .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalvar)
                    .addComponent(btCancelar1))
                .addGap(25, 25, 25))
        );

        jtpMain.addTab("Cadastro", jpCadastro);

        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        jtResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtResultados.getTableHeader().setReorderingAllowed(false);
        jtResultados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtResultadosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtResultados);

        btVerEditar.setText("Ver resultados");
        btVerEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpConsultaLayout = new javax.swing.GroupLayout(jpConsulta);
        jpConsulta.setLayout(jpConsultaLayout);
        jpConsultaLayout.setHorizontalGroup(
            jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpConsultaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btCancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btVerEditar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jpConsultaLayout.setVerticalGroup(
            jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btVerEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btCancelar)
                .addGap(23, 23, 23))
        );

        jtpMain.addTab("Consulta", jpConsulta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtpMain, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtpMain)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtpMainFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtpMainFocusGained
        ExecucaoScript es = new ExecucaoScript();
        MaquinasExecutarScript mes = new MaquinasExecutarScript();
        Maquina ma = new Maquina();
        ma.setNome("");
        mes.setMaquina(ma);
        Set<MaquinasExecutarScript> setM = new HashSet<>();
        setM.add(mes);
        es.setMaquinasExecutarScripts(setM);

        new ControleExecutarScript().popularTabela(jtResultados, es, false);
    }//GEN-LAST:event_jtpMainFocusGained

    private void btBuscarScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarScriptActionPerformed
        try {
            Script scriptModal = new Script();
            ControleScript ctrlScript = new ControleScript();
            new JdlgGenerico(this, ctrlScript, scriptModal, 1).setVisible(true);
        } catch (Exception e) {
            System.err.println("Erro em btBuscarPredioScriptPerformed " + e);
        }
    }//GEN-LAST:event_btBuscarScriptActionPerformed

    private void btCancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelar1ActionPerformed
        int i = JOptionPane.showConfirmDialog(null, "Deseja cancelar esta operação?", "Confirmar", JOptionPane.YES_NO_OPTION);
        if (i == 0) {
            this.dispose();
        } else {
            System.out.println("i" + i);
        }
    }//GEN-LAST:event_btCancelar1ActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        if (controle.Formatacao.verificarNulos(jpCadastro)) {
            if (jtMaquinasAdicionadas.getRowCount() != 0) {
                System.out.println("Id do script:" + Integer.parseInt(qftfIdScript.getText()));
                script.setId(Integer.parseInt(qftfIdScript.getText()));
                execScript.setData(Util.getCurrentDate());
                execScript.setScript(script);
                execScript.setUsuario(usuario);
                execScript.setMaquinasExecutarScripts(listaMaquinasExecutarScripts);
                execScript.setExecutado(false);
                if (execScript.getId() == 0) {
                    this.inserir();
                } else {
                    this.editar();
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Adicione uma máquina a execução");
        }

    }//GEN-LAST:event_btSalvarActionPerformed

    private void btVerEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerEditarActionPerformed
        if (jtResultados.getSelectedRow() != -1) {
            int idRegistroSelecionado = ((int) jtResultados.getValueAt(jtResultados.getSelectedRow(), 0));
            new JfMaquinasExecutarScript(usuario, idRegistroSelecionado);
        }
    }//GEN-LAST:event_btVerEditarActionPerformed

    private void jtResultadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtResultadosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jtResultadosMouseClicked

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        btCancelar1ActionPerformed(evt);
    }//GEN-LAST:event_btCancelarActionPerformed

    private void jtMaquinasAdicionadasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtMaquinasAdicionadasMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jtMaquinasAdicionadasMouseClicked

    private void jtMaquinasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtMaquinasMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jtMaquinasMouseClicked

    private void btBuscarMaquinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarMaquinaActionPerformed
        Maquina m = new Maquina();
        ControleMaquina cm = new ControleMaquina();
        m.setNome(jftfNomeMaquina.getText());
        cm.popularTabela(jtMaquinas, m, false);

    }//GEN-LAST:event_btBuscarMaquinaActionPerformed

    private void btAdicionarMaquinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarMaquinaActionPerformed
        adicionarNaTabela();
    }//GEN-LAST:event_btAdicionarMaquinaActionPerformed

    private void btRemoverMaquinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverMaquinaActionPerformed
        removerNaTabela();
    }//GEN-LAST:event_btRemoverMaquinaActionPerformed

    @Override
    public boolean inserir() {
        boolean permissaoUser = proxy.inserir();

        System.out.println("Permisssao desse cara: " + permissaoUser);
        if (permissaoUser) {
            boolean retorno = ces.salvar(execScript);
            if (retorno) {
                JOptionPane.showMessageDialog(rootPane, "Operação Realizada com sucesso");
                this.limparCampos();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Não foi posssíel realizar esta operação, consulte o log de erros");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Você não possui permissão para realizar essa operação");
        }
        return true;
    }

    @Override
    public boolean ler() {
        boolean permissaoUser = proxy.ler();

        System.out.println("Permisssao desse cara: " + permissaoUser);
        if (permissaoUser) {
            this.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Você não possui permissão para acessar esta tela");
            this.dispose();
        }
        return true;
    }

    @Override
    public boolean editar() {
//        boolean permissaoUser = proxy.editar();
//
//        System.out.println("Permisssao desse cara: " + permissaoUser);
//        if (permissaoUser) {
//            boolean retorno = new SalaDAO().salvar(sala);
//            if (retorno) {
//                JOptionPane.showMessageDialog(rootPane, "Operação Realizada com sucesso");
//                this.limparCampos();
//            } else {
//                JOptionPane.showMessageDialog(rootPane, "Não foi posssíel realizar esta operação, consulte o log de erros");
//            }
//        } else {
//            JOptionPane.showMessageDialog(rootPane, "Você não possui permissão para realizar essa operação");
//        }
        return true;
    }

    @Override
    public boolean inativar() {
//        boolean permissaoUser = proxy.inativar();
//        System.out.println("Permisssao para ler: " + permissaoUser);
//
//        if (permissaoUser) {
//            int id = 0;
//            try {
//                id = ((int) jtResultados.getValueAt(jtResultados.getSelectedRow(), 0));
//                boolean retorno = controleSala.inativar(id);
//                if (retorno) {
//                    JOptionPane.showMessageDialog(rootPane, "Operação Realizada com sucesso");
//                    btConsultarTabelaActionPerformed(null);
//                } else {
//                    JOptionPane.showMessageDialog(rootPane, "Não foi posssíel realizar esta operação, consulte o log de erros");
//                }
//            } catch (Exception e) {
//                System.err.println("erro ao alterar status " + e.getLocalizedMessage());
//            }
//        } else {
//            JOptionPane.showMessageDialog(rootPane, "Você não possui permissão para realizar essa operação");
//        }
        return true;
    }

    @Override
    public void limparCampos() {
        this.script = null;
        this.script = new Script();
        this.execScript = null;
        this.execScript = new ExecucaoScript();
        jtMaquinas.clearSelection();
        listaMaquinasExecutarScripts.clear();
        pupularTabela();
        Formatacao.limparCampos(jpCadastro);
    }

    @Override
    public void popularCampos() {
//        try {
//            qftfNome.setText(sala.getNome());
//            jtDescricao.setText(sala.getDescricao());
//            qftfIdScript.setText("" + sala.getPredio().getId());
//            jftfNomeScript.setText(sala.getPredio().getNome());
//        } catch (Exception e) {
//            System.err.println("Erro em popular campos da sala \n" + e);
//        }
    }

    /**
     * Metodo para alterar os atributos do relacionamento Predio, no objeto sala
     *
     * @param id do predio
     * @param nome do predio
     */
    @Override
    public void setRelacionado1(String id, String nome) {
        try {
            qftfIdScript.setText(id);
            jftfNomeScript.setText(nome);
        } catch (Exception e) {
            System.err.println("Erro em setRelacionado1: " + e);
        }
    }

    @Override
    public void setRelacionado2(String id, String nome) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setRelacionado3(String id, String nome) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    protected void adicionarNaTabela() {
        if (jtMaquinas.getSelectedRowCount() != 0) {

            for (int linha : jtMaquinas.getSelectedRows()) {
                Maquina m = new Maquina();
                MaquinasExecutarScript mes = new MaquinasExecutarScript();

                System.out.println("linha selecionada:" + linha);
                m.setId((int) jtMaquinas.getValueAt(linha, 0));

                if (verificaDuplicadosNoVetor(m.getId())) {
                    JOptionPane.showMessageDialog(rootPane, "A Máquina " + m.getId() + " já está na lista");
                } else {
                    m.setNome((String) jtMaquinas.getValueAt(linha, 1));
                    m.setSo((String) jtMaquinas.getValueAt(linha, 2));

                    mes.setMaquina(m);
                    mes.setExecucaoScript(execScript);

                    listaMaquinasExecutarScripts.add(mes);
                    pupularTabela();
                }
            }

        }
    }

    protected void removerNaTabela() {
        if (jtMaquinasAdicionadas.getSelectedRowCount() != 0) {
            for (int linha : jtMaquinasAdicionadas.getSelectedRows()) {
                Maquina m = new Maquina();
                m.setId((int) jtMaquinasAdicionadas.getValueAt(linha, 0));
                m.setNome((String) jtMaquinasAdicionadas.getValueAt(linha, 1));
                m.setSo((String) jtMaquinasAdicionadas.getValueAt(linha, 2));

                listaMaquinasExecutarScripts.removeIf(a -> m.getId() == a.getMaquina().getId());
            }
            pupularTabela();
        }
    }

    protected boolean verificaDuplicadosNoVetor(int id) {
        boolean retorno = false;
        for (MaquinasExecutarScript mes : listaMaquinasExecutarScripts) {
            Maquina maquina = mes.getMaquina();
            if (maquina.getId() == id) {
                retorno = true;
            }
        }
        return retorno;
    }

    protected void pupularTabela() {
        Object[][] dadosTabela = null;
        //   System.out.println("populando tabela");
        try {
            int colunasTabela = 3;

            Object[] cabecalho = new Object[colunasTabela];

            cabecalho[0] = "Cód.";
            cabecalho[1] = "Nome";
            cabecalho[2] = "So";

            // cria matriz de acordo com n de registros da tabela
            dadosTabela = new Object[listaMaquinasExecutarScripts.size()][colunasTabela];

            int i = 0;
            for (Iterator<MaquinasExecutarScript> it = listaMaquinasExecutarScripts.iterator(); it.hasNext();) {
                Maquina maquina = it.next().getMaquina();
                dadosTabela[i][0] = maquina.getId();
                dadosTabela[i][1] = maquina.getNome();
                dadosTabela[i][2] = maquina.getSo();
                i++;
            }

            // configuracoes adicionais no componente tabela
            jtMaquinasAdicionadas.setModel(new DefaultTableModel(dadosTabela, cabecalho) {
                @Override
                // quando retorno for FALSE, a tabela nao é editavel
                public boolean isCellEditable(int row, int column) {
                    return false;
                }

                @Override
                public Class getColumnClass(int column) {
                    return Object.class;
                }
            });

            // permite seleção de apenas uma linha da tabela
//            jtMaquinasAdicionadas.setSelectionMode(0);
//Desabilitar arrastar e soltar
            jtMaquinasAdicionadas.getTableHeader().setReorderingAllowed(false);

            //alinha valores da coluna de valores para a direita 
            DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
            DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
            DefaultTableCellRenderer direita = new DefaultTableCellRenderer();

            esquerda.setHorizontalAlignment(SwingConstants.LEFT);
            centralizado.setHorizontalAlignment(SwingConstants.CENTER);
            direita.setHorizontalAlignment(SwingConstants.RIGHT);

            jtMaquinasAdicionadas.getColumnModel().getColumn(0).setCellRenderer(esquerda);
            jtMaquinasAdicionadas.getColumnModel().getColumn(1).setCellRenderer(esquerda);
            jtMaquinasAdicionadas.getColumnModel().getColumn(2).setCellRenderer(esquerda);
            jtMaquinasAdicionadas.getTableHeader().setResizingAllowed(true);

            // redimensiona as colunas de uma tabela
            TableColumn column = null;
        } catch (Exception e) {
            System.err.println("Erro ao popular tabela: " + e + "\n" + e.getCause());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionarMaquina;
    private javax.swing.JButton btBuscarMaquina;
    private javax.swing.JButton btBuscarScript;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btCancelar1;
    private javax.swing.JButton btRemoverMaquina;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btVerEditar;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JFormattedTextField jftfNomeMaquina;
    private javax.swing.JFormattedTextField jftfNomeScript;
    private javax.swing.JPanel jpCadastro;
    private javax.swing.JPanel jpConsulta;
    private javax.swing.JTable jtMaquinas;
    private javax.swing.JTable jtMaquinasAdicionadas;
    private javax.swing.JTable jtResultados;
    private javax.swing.JTabbedPane jtpMain;
    private qitjftf.QITJFormattedTextField qftfIdScript;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setRelacionado4(String id, String nome) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
